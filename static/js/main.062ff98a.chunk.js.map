{"version":3,"sources":["components/modal/Modal.jsx","hooks/useIosInstallPrompt.js","components/landing/Landing.jsx","App.js","serviceWorker.js","index.js"],"names":["Modal","prompt","useState","modalOpen","setModalOpen","console","log","useEffect","className","id","useIOS","isIOS","setIsIOS","navigator","standalone","today","moment","toDate","lastPrompt","localStorage","getItem","days","diff","ua","window","userAgent","webkit","match","isIPad","isIPhone","isSafari","isNaN","setItem","checkIOS","Landing","useIosInstallPrompt","type","placeholder","App","history","path","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.062ff98a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Modal({ prompt }) {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  console.log(prompt,\"holi\");\r\n\r\n  useEffect( () => {\r\n    setModalOpen(true);\r\n  })\r\n  console.log(prompt, \"pipo 3000\")\r\n  return (\r\n    <div className={`modal ${modalOpen === true ? \"is-active\" : \"\"} `}>\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"modal-content\">\r\n        <div className=\"box\">\r\n          <article className=\"media\">\r\n            <div className=\"media-content\">\r\n              <div className=\"content\">\r\n                <p>\r\n                  The content for the modal comes here. You may use text,\r\n                  images, buttons etc. here.\r\n                </p>\r\n              </div>\r\n              <button\r\n                className=\"button is-danger is-small\"\r\n                id=\"closebtn\"\r\n                // onClick={handleIOSInstallDeclined}\r\n              >\r\n                Close Modal\r\n              </button>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    {/* { useWebInstallPrompt && ( */}\r\n      {/* <div className=\"modal-background\"></div>\r\n      <div className=\"modal-content\">\r\n        <div className=\"box\">\r\n          <article className=\"media\">\r\n            <div className=\"media-content\">\r\n              <div className=\"content\">\r\n                <p>\r\n                  The content for the modal comes here. You may use text,\r\n                  images, buttons etc. here.\r\n                </p>\r\n              </div>\r\n              <button\r\n                className=\"button is-info is-small\"\r\n                id=\"accept\"\r\n                onClick={installButton}\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                className=\"button is-danger is-small\"\r\n                id=\"closebtn\"\r\n                onClick={closeButton}\r\n              >\r\n                Close Modal\r\n              </button>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div> */}\r\n{/* )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nfunction checkIOS() {\r\n    if (navigator.standalone) {\r\n        return false;\r\n    }\r\n\r\n    const today = moment().toDate();\r\n    const lastPrompt = moment(localStorage.getItem(\"installPrompt\"));\r\n    const days = moment(today).diff(lastPrompt, \"days\");\r\n    const ua = window.navigator.userAgent;\r\n    console.log(ua)\r\n    const webkit = !!ua.match(/Webkit/i);\r\n    const isIPad = !!ua.match(/iPad/i);\r\n    const isIPhone = !!ua.match(/iPhone/i);\r\n    const isIOS = isIPad || isIPhone;\r\n    const isSafari = isIOS && webkit && !ua.match(/CriOS/i);\r\n\r\n    const prompt = (isNaN(days) || days > 30) && isIOS && isSafari;\r\n\r\n    if(prompt && \"localStorage\" in window) {\r\n        localStorage.setItem(\"installPrompt\", today);\r\n    }\r\n\r\n    return {isIOS, isSafari, prompt};\r\n\r\n}\r\n\r\nexport default function useIOS() {\r\n    const [isIOS, setIsIOS] = useState({});\r\n\r\n    useEffect(() => {\r\n        setIsIOS(checkIOS());\r\n        return() => console.log(\"Clean up install prompt\", isIOS)\r\n    }, []);\r\n    return isIOS;\r\n}\r\n","import React from 'react';\r\nimport Modal from '../modal/Modal';\r\nimport useIosInstallPrompt from '../../hooks/useIosInstallPrompt';\r\n\r\nfunction Landing() {\r\n  const { prompt } = useIosInstallPrompt();\r\n  console.log(prompt, \"holi 2\")\r\n    return (\r\n        <div className=\"section\">\r\n            {prompt &&  <Modal\r\n            prompt={prompt}\r\n            />}\r\n        <h1 className=\"title\">Banorte</h1>  \r\n        <div className=\"field\">\r\n          <div className=\"control\">\r\n            <input className=\"input\" type=\"text\" placeholder=\"Input\" />\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"field\">\r\n          <p className=\"control\">\r\n            <span className=\"select\">\r\n              <select>\r\n                <option>Select dropdown</option>\r\n              </select>\r\n            </span>\r\n          </p>\r\n        </div>\r\n  \r\n        <div className=\"buttons\">\r\n          <button className=\"button is-primary\">Primary</button>\r\n          <button className=\"button is-link\">Link</button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route, withRouter } from 'react-router-dom';\nimport Landing from './components/landing/Landing';\nimport './App.sass';\nimport './App.css';\n\n\nfunction App({ history }) {\n  return (\n    <Router>\n    <Switch>\n      <Route path=\"/\">\n        <Landing />\n      </Route>\n    </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}